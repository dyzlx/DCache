public class TestService {

    private static Map<Integer, DModel> db = new HashMap<>();

    static {
        db.put(1, DModel.builder().id(1).name("dyz")
                .password("1234556").phoneNumber("13212068907").age(24)
                .build());
        db.put(2, DModel.builder().id(2).name("dyz-2")
                .password("1234556-2").phoneNumber("13212068907-2").age(24)
                .build());
        db.put(3, DModel.builder().id(3).name("dyz-3")
                .password("1234556-3").phoneNumber("13212068907-3").age(24)
                .build());
    }

    public List<DModel> queryList(String name, String phoneNumber) {
        return (List<DModel>) db.values();
    }

    @DCacheable(key = "model:id:#id", expire = 400, keyGeneratorName = "sqELDKeyGenerator")
    public DModel query(int id) {
        log.info("query DModel from db, id={}", id);
        return db.get(id);
    }

    @DCacheable(key = "model:name:#name:age:#age", expire = 400, keyGeneratorName = "sqELDKeyGenerator")
    public DModel queryByNameAndAge(String name, int age) {
        log.info("query DModel from db, name={}, age={}", name, age);
        return db.values().stream().filter(x -> (x.getName().equals(name) && x.getAge()==age)).findFirst().get();
    }

    @DCacheEvict(key = "model:id:#id", keyGeneratorName = "sqELDKeyGenerator")
    public void deleteByid(int id) {
        log.info("delete DModel from db, id={}", id);
    }

    @DCachePut(key = "model:id:#dModel.id", expire = 400, deleteKeyInsteadOfUpdate = true, keyGeneratorName = "sqELDKeyGenerator")
    public DModel updateModel(DModel dModel) {
        log.info("update DModel to db, id={}", dModel.getId());
        DModel d = db.get(dModel.getId());
        d.setName(dModel.getName());
        d.setPhoneNumber(dModel.getPhoneNumber());
        return db.get(dModel.getId());
    }
}


        System.out.println("-------------query-----------------");
        System.out.println(service.query(1));

        System.out.println("--------------update----------------");
        System.out.println(service.updateModel(DModel.builder().id(1).name("name_update").build()));

        System.out.println("--------------query----------------");
        System.out.println(service.query(1));

        System.out.println("--------------delete----------------");
        service.deleteByid(1);

        System.out.println("---------------query---------------");
        System.out.println(service.query(1));


dcache:
  redis:
    enable: true
    host: localhost
    port: 6379
    min-idle: 5
    max-idle: 10
    max-total: 20
    db-index: 0
    max-wait-millis: 500
    timeout: 500
    test-on-borrow: false
